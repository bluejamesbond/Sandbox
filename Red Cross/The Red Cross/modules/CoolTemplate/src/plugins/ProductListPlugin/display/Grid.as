package display {	import gT.display.components.GenericComponent;		import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;		import gs.TweenMax;			public class Grid extends GenericComponent {		private var __data:Array = [];		private var __elements:Array = [];		private var __separation:Number = 5;		private var __column:uint = 2;		private var __holder:Sprite;		private var __cont:uint;				public function Grid(data:Array):void{			__data = data;			super();		}						/*Protected Methods*/		override protected function init():void		{			super.init();		}				override protected function addChildren():void{			__holder = new Sprite();			addChild(__holder);						createItems()		}		/*Private Methods*/				private function createItems():void{			for(var i:uint=0; i < __data.length; i++){				var item:Item = new Item(__data[i]);				item.addEventListener(Item.IMAGE_LOADED, next, false, 0, true);				item.name = String(i);				__holder.addChild(item);				TweenMax.from(item, 1, {alpha:0, delay:i*.1});				__elements.push(item);			}						__elements[0].loadImage();			draw();		}				private function  next(e:Event){			if(__cont < __elements.length-1){				__cont++;				__elements[__cont].loadImage();			}		}				/*Public Methods*/				override public function draw():void{						for(var j:uint = 0; j < __elements.length; j++){				__elements[j].x = (j % __column) * (__elements[j].width + __separation);				__elements[j].y = Math.floor((j / __column)) * (130);			}					}				/*Setters and Getters*/			}}