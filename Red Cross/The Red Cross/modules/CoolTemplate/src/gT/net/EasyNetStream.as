package gT.net {		import flash.net.NetConnection;	import flash.net.NetStream;	import flash.events.EventDispatcher;	import flash.events.Event;	import flash.events.NetStatusEvent;	import flash.events.IOErrorEvent;		public class EasyNetStream extends NetStream {				private var __nc:NetConnection;		private var __metaData:Object;		private var __cuePoint:Object;		private var __xmpData:Object;		private var __netStatusEvent:NetStatusEvent;				public var onMetaData:Function;		public var onCuePoint:Function;		public var onXMPData:Function;				public static const ON_META_DATA:String = "onMetaData";		public static const ON_CUE_POINT:String = "onCuePoint";		public static const ON_XMP_DATA:String = "onXmpData";		public static const STATUS:String = "status";				public function EasyNetStream() {						onMetaData = onMetaDataHandler;			onCuePoint = onCuePointHandler;			onXMPData = onXMPDataHandler;						__nc = new NetConnection();			__nc.connect(null);						super(__nc);						addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler, false, 0, true);			addEventListener(IOErrorEvent.IO_ERROR, errorHadler, false, 0, true);		}				private function onMetaDataHandler (data:Object) {			__metaData = data;			dispatchEvent(new Event(EasyNetStream.ON_META_DATA));		}				private function onCuePointHandler (data:Object) {			__cuePoint = data;			dispatchEvent(new Event(EasyNetStream.ON_CUE_POINT));		}				private function onXMPDataHandler (data:Object) {			__xmpData = data;			dispatchEvent(new Event(EasyNetStream.ON_XMP_DATA));		}				private function netStatusHandler(event:NetStatusEvent):void {			__netStatusEvent  = event;			dispatchEvent(new Event(STATUS));		}				private function errorHadler (event:IOErrorEvent) {			trace(event);		}				// Get		public function get metaData ():Object {			return __metaData;		}				public function get cuePoint ():Object {			return __cuePoint;		}				public function get xmpData ():Object {			return __xmpData;		}				public function get netConnection ():NetConnection {			return __nc;		}				public function get longStatus ():NetStatusEvent {			return __netStatusEvent;		}				public function get status ():String {			var target:String = __netStatusEvent.info.code;			return target.substring(target.lastIndexOf(".")+1, target.length).toLowerCase();;		}					}}