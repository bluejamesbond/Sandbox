/*MenuItem.asgTFrameWorkCreated on 2/11/09.Copyright 2009 goTo! Multimedia. All rights reserved.*/package gT.display{		import flash.events.Event;	import flash.events.MouseEvent;	import gT.display.components.GenericComponent;		public class MenuItem extends GenericComponent {				protected var __padding:Object = {left:0, right:0};		protected var __align:String = "left";		protected var __index:uint;		protected var __enabled:Boolean = true;		protected var __autoSize:Boolean = true;				public static const MENU_ITEM_CLICKED:String = "menuItemClicked";				public function MenuItem () {			buttonMode = true;			mouseChildren = false;			super();		}				//////////////////////////////////////////////////////////		//		// Protected Methods		//		//////////////////////////////////////////////////////////		override protected function init ():void		{			super.init();						addEvents();		}				protected function addEvents():void{			addEventListener(MouseEvent.CLICK, handler, false, 0, true);			addEventListener(MouseEvent.MOUSE_OUT, handler, false, 0, true);			addEventListener(MouseEvent.MOUSE_OVER, handler, false, 0, true);		}				protected function removeEvents():void{			removeEventListener(MouseEvent.CLICK, handler);			removeEventListener(MouseEvent.MOUSE_OUT, handler);			removeEventListener(MouseEvent.MOUSE_OVER, handler);		}				protected function eventHandler (e:*):void		{			if(e.type == MouseEvent.CLICK){				dispatchEvent(new Event(MENU_ITEM_CLICKED, true));			}		}		//////////////////////////////////////////////////////////		//		// Events Handler		//		//////////////////////////////////////////////////////////		private function handler (e:*):void		{			if (__enabled) {				eventHandler(e);			}		}				/*		override public function draw ():void		{		}		 */				//////////////////////////////////////////////////////////		//		// Private Methods		//		//////////////////////////////////////////////////////////				//////////////////////////////////////////////////////////		//		// Setters && Getters		//		//////////////////////////////////////////////////////////		public function set index (value:uint):void		{			__index = value;		}				public function get index ():uint		{			return __index;		}				public function set align (value:String):void		{			__align = value;		}				public function get align ():String		{			return __align;		}				public function set autoSize (value:Boolean):void		{			__autoSize = value;			draw();		}				public function get autoSize():Boolean		{			return __autoSize;		}				public function set padding (value:Object):void		{			__padding = value;			draw();		}				public function get padding():Object		{			return __padding;		}				public function set enabled (value:Boolean):void		{			__enabled = value;			mouseEnabled = __enabled;			if (__enabled) 			{				dispatchEvent(new MouseEvent(MouseEvent.MOUSE_OUT));			}		}				public function get enabled ():Boolean		{			return __enabled;		}	}}