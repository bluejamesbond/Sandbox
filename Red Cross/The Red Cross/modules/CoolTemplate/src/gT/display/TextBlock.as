/*TextBlock.aslabsCreated by Alexander Ruiz Ponce on 26/09/09.Copyright 2009 goTo! Multimedia. All rights reserved.*/package gT.display {		import flash.display.Sprite;	import flash.events.Event;	import flash.utils.getDefinitionByName;	import flash.text.StyleSheet;		import gT.display.components.GenericComponent;		public class TextBlock extends GenericComponent {				protected var __data:Array;		protected var __blocks:Array;		protected var __titleSpace:uint;		protected var __spaceAfterParagraph:int = 5;		protected var __spaceAfterTitle:int = 5;		protected var __textsHolder:Sprite;		protected var __styles:StyleSheet;				protected var __assetID:String;		protected var Block:Class;				public function TextBlock (_assetID:String, _data:Array, _styles:StyleSheet = null) {			cacheAsBitmap = true;			__assetID = _assetID;			__styles = _styles;			__data = _data;			__blocks = [];						super();		}				//////////////////////////////////////////////////////////		//		// Protected Methods		//		//////////////////////////////////////////////////////////				override protected function init ():void		{			Block = getDefinitionByName(__assetID) as Class;			setMinSize(100, 30);			super.init();		}				override protected function onStage():void		{		}				override protected function addChildren():void		{			// Texts Holder			__textsHolder = new Sprite;			addChild(__textsHolder);						for (var i:uint = 0; i < __data.length; i++) {				var block = createBlock(__data[i].title, __data[i].paragraph);				__blocks.push(block);								__textsHolder.addChild(block);			}		}				//////////////////////////////////////////////////////////		//		// Public Methods		//		//////////////////////////////////////////////////////////				override public function draw ():void		{			var i:uint;			var l:uint = __blocks.length;						for (i ; i < l; i++) {				var b = __blocks[i];				var hasTitle = b.title;				var hasParagraph = b.paragraph;								if (hasTitle) {					b.title.width = __width;				}				if (hasParagraph) {					b.paragraph.width = __width;				}				if (hasTitle && hasParagraph) {					b.paragraph.y = b.title.height + __spaceAfterTitle;				}				if (i) {					var a = __blocks[i-1];					b.y = a.y + a.height + __spaceAfterParagraph;				}			}						__height = __textsHolder.height;		}				//////////////////////////////////////////////////////////		//		// Events Handler		//		//////////////////////////////////////////////////////////				//////////////////////////////////////////////////////////		//		// Private Methods		//		//////////////////////////////////////////////////////////		protected function createBlock (title:String, paragraph:String, ... array):Object 		{			var block = new Block;						// Title			if(title){				block.title.autoSize = "left";				block.title.htmlText = title;				block.title.mouseEnabled = false;				//block.title.border = true;			}else{				block.removeChild(block.title);				block.paragraph.y = 0;				block.title = null;			}						// Paragraph			if(paragraph){				block.paragraph.autoSize = "left";				block.paragraph.styleSheet = __styles;				block.paragraph.htmlText = "<body>"+paragraph+"</body>";				//block.paragraph.border = true;			}else{				block.removeChild(block.paragraph);				block.paragraph = null;			}						return block;		}		//////////////////////////////////////////////////////////		//		// Setters && Getters		//		//////////////////////////////////////////////////////////				public function set spaceAfterParagraph (value:int):void		{			__spaceAfterParagraph = value;			draw();		}				public function set spaceAfterTitle (value:int):void		{			__spaceAfterTitle = value;			draw();		}				public function get spaceAfterTitle ():int		{			return __spaceAfterTitle;		}				public function get blocks ():Array		{			return __blocks;		}	}}