//**************************************************\\//**************************************************\\//** TITLE: Singleton.as		 	  		  	  **\\//** VERSION: 1.0  								  **\\//** LAST UPDATE: July 25, 2009    	       	      **\\//**************************************************\\//**************************************************\\//** CREATED BY: Metaphor Creations               **\\//** joe@metaphorcreations.com               	  **\\//** www.flashden.net/user/JoeMC                  **\\//** www.metaphorcreations.com               	  **\\//**************************************************\\//**************************************************\\package com.metaphor_creations.cobra {		import flash.display.*;	import flash.events.Event;	import flash.events.EventDispatcher;    public class Singleton extends Sprite {		        private static var _instance:Singleton=null;				private var edge_spacing:Number=0;		private var screen_width:Number=0;		private var screen_height:Number=0;		private var scroller_width:Number=0;		private var scroller_height:Number=0;		private var sidebar_width:Number=0;		private var sidebar_height:Number=0;		private var scroller_content_width:Number = 0;		private var scroller_content_height:Number = 0;		private var scroller_content_position:Number = 0;		private var number_of_forms:Number = 0;		private var number_of_forms_completed:Number = 0;		private var number_of_required_forms:Number = 0;		private var number_of_required_forms_completed:Number = 0;				private var form_color:uint;		private var form_color_selected:uint;		private var loadbar_color:uint;				private var full_height:Boolean = false;		        public function Singleton(e:SingletonEnforcer){            trace("Singleton has been created");        }		        public static function getInstance():Singleton {            			if(_instance==null){                _instance=new Singleton(new SingletonEnforcer());            }			            return _instance;        }												//**********************************************************************		// Functions		//**********************************************************************				public function scrollerContentUpdate():void {						// Dispatch an event			dispatchEvent(new Event("scrollerContentUpdated"));		}				//**********************************************************************		// Functions		//**********************************************************************												//**********************************************************************		// Setters		//**********************************************************************		        public function set edgeSpacing(spacing:Number):void{            edge_spacing = spacing;        }				public function set formColor(c:uint):void{			form_color = c;		}				public function set fullHeight(fh:Boolean):void{			full_height = fh;		}				public function set loadbarColor(c:uint):void{			loadbar_color = c;		}				public function set scrollerContentHeight(h:Number):void{			scroller_content_height = h;						// Dispatch an event			dispatchEvent(new Event("scrollerContentHeightChanged"));		}				public function set scrollerContentPosition(p:Number):void{			scroller_content_position = p;			// Dispatch an event			dispatchEvent(new Event("scrollerContentPositionChanged"));		}				public function set scrollerContentWidth(w:Number):void{			scroller_content_width = w;						// Dispatch an event			dispatchEvent(new Event("scrollerContentWidthChanged"));		}				public function set scrollerHeight(h:Number):void{			scroller_height = h;		}				public function set scrollerWidth(w:Number):void{			scroller_width = w;		}				public function set selectedFormColor(c:uint):void{			form_color_selected = c;		}				public function set sh(h:Number):void{            screen_height = h;        }				public function set sidebarHeight(h:Number):void{			sidebar_height = h;		}				public function set sidebarWidth(w:Number):void{			sidebar_width = w;		}				public function set sw(w:Number):void{            screen_width = w;        }				public function set updateFormCount(n:Number):void{			number_of_forms += n;			// Dispatch an event			dispatchEvent(new Event("formCountUpdated"));		}				public function set updateFormCountCompleted(n:Number):void{			number_of_forms_completed += n;			// Dispatch an event			dispatchEvent(new Event("formCountUpdated"));		}				public function set updateRequiredFormCount(n:Number):void{			number_of_required_forms += n;			// Dispatch an event			dispatchEvent(new Event("formCountUpdated"));		}				public function set updateRequiredFormCountCompleted(n:Number):void{			number_of_required_forms_completed += n;			// Dispatch an event			dispatchEvent(new Event("formCountUpdated"));		}		//**********************************************************************		// Setters		//**********************************************************************												//**********************************************************************		// Getters		//**********************************************************************		public function get edgeSpacing():Number {            return edge_spacing;        }				public function get formColor():uint{			return form_color;		}				public function get formCount():Number {			return number_of_forms;		}				public function get formCountCompleted():Number {			return number_of_forms_completed;		}				public function get fullHeight():Boolean {			return full_height;		}				public function get loadbarColor():uint{			return loadbar_color;		}				public function get requiredFormCount():Number {			return number_of_required_forms;		}				public function get requiredFormCountCompleted():Number {			return number_of_required_forms_completed;		}				public function get scrollerContentHeight():Number {			return scroller_content_height;		}				public function get scrollerContentPosition():Number {			return scroller_content_position;		}				public function get scrollerContentWidth():Number {			return scroller_content_width;		}				public function get scrollerHeight():Number {			return scroller_height;		}				public function get scrollerWidth():Number {			return scroller_width;		}				public function get selectedFormColor():uint{			return form_color_selected;		}				public function get sidebarHeight():Number {			return sidebar_height;		}				public function get sidebarWidth():Number {			return sidebar_width;		}				public function get sw():Number {            return screen_width;        }				public function get sh():Number {            return screen_height;        }		//**********************************************************************		// Getters		//**********************************************************************    }} class SingletonEnforcer{}