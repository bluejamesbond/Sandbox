var Grooveshark, async, cheerio, crypto, groovesharkRequestUuid, lastRandomizer, randomizer, request, uuid;
crypto = require('crypto');
async = require('async');
request = require('request');
cheerio = require('cheerio');
uuid = require('node-uuid');
Grooveshark = (function () {
    function Grooveshark() {}
    return Grooveshark;
})();
lastRandomizer = null;
groovesharkRequestUuid = uuid.v4();
randomizer = function () {
    var e, t;
    e = "";
    t = 0;
    while (t < 6) {
        e += Math.floor(Math.random() * 16).toString(16);
        t++;
    }
    if (e !== lastRandomizer) {
        return e;
    } else {
        return randomizer();
    }
};
Grooveshark.getStreamingUrl = function (songID, callback) {
    if (!(songID != null) || songID.length === 0) {
        return callback(new Error('invalid SongID'));
    }
    return request({
        url: 'http://html5.grooveshark.com/',
        headers: {
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
            'Accept-Charset': 'UTF-8,*;q=0.5',
            'Accept-Language': 'en-US,en;q=0.8',
            'Cache-Control': 'max-age=0',
            'Connection': 'keep-alive',
            'Host': 'html5.grooveshark.com',
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1'
        }
    }, function (err, res, body) {
        var $, GS, jsString, secretKey, session, window;
        if (err != null) {
            return callback(err);
        }
        $ = cheerio.load(body);
        jsString = $('script').eq(2).text();
        window = {};
        GS = {
            locales: {}
        };
        eval(jsString);
        lastRandomizer = randomizer();
        session = window.GS.config.sessionID;
        secretKey = crypto.createHash('md5').update(session).digest('hex');
        body = {
            header: {
                client: 'mobileshark',
                clientRevision: '20120830',
                privacy: 0,
                country: window.GS.config.country,
                uuid: groovesharkRequestUuid,
                session: session
            },
            method: 'getCommunicationToken',
            parameters: {
                secretKey: secretKey
            }
        };
        return request({
            url: 'https://html5.grooveshark.com/more.php?getCommunicationToken',
            method: 'post',
            headers: {
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
                'Accept-Charset': 'UTF-8,*;q=0.5',
                'Accept-Language': 'en-US,en;q=0.8',
                'Cache-Control': 'max-age=0',
                'Connection': 'keep-alive',
                'Host': 'html5.grooveshark.com',
                'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1'
            },
            body: JSON.stringify(body)
        }, function (err, res, body) {
            var bodyObject, communicationToken, token, tokenSource;
            if (err != null) {
                return callback(err);
            }
            bodyObject = JSON.parse(body);
            communicationToken = bodyObject.result;
            lastRandomizer = randomizer();
            tokenSource = "getStreamKeyFromSongIDEx:" + communicationToken + ":gooeyFlubber:" + lastRandomizer;
            token = "" + lastRandomizer + (crypto.createHash('sha1').update(tokenSource).digest('hex'));
            body = {
                header: {
                    client: 'mobileshark',
                    clientRevision: '20120830',
                    privacy: 0,
                    country: window.GS.config.country,
                    uuid: groovesharkRequestUuid,
                    session: session,
                    token: token
                },
                method: 'getStreamKeyFromSongIDEx',
                parameters: {
                    prefetch: false,
                    mobile: true,
                    songID: songID,
                    country: window.GS.config.country
                }
            };
            return request({
                url: 'https://html5.grooveshark.com/more.php?getStreamKeyFromSongIDEx',
                method: 'post',
                headers: {
                    'Accept': 'application/json',
                    'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',
                    'Accept-Language': 'en-US,en;q=0.8',
                    'Cache-Control': 'no-cache',
                    'Connection': 'keep-alive',
                    'Host': 'html5.grooveshark.com',
                    'Referer': 'http://html5.grooveshark.com',
                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1'
                },
                body: JSON.stringify(body)
            }, function (err, res, body) {
                var host, streamKey;
                if (err != null) {
                    return callback(err);
                }
                bodyObject = JSON.parse(body);
                if (!(bodyObject.result != null)) {
                    return callback(new Error('denied.'));
                }
                host = bodyObject.result.ip;
                streamKey = bodyObject.result.streamKey;
                return callback(null, "http://" + host + "/stream.php?streamKey=" + streamKey);
            });
        });
    });
};
module.exports = Grooveshark;
