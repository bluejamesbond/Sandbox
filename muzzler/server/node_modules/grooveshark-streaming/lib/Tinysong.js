var Tinysong, async, cheerio, extractSongInfoArrayFromHtml, request;
async = require('async');
request = require('request');
cheerio = require('cheerio');
Tinysong = (function () {
    function Tinysong() {}
    return Tinysong;
})();
request({
    url: 'http://tinysong.com/',
    headers: {
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Charset': 'UTF-8,*;q=0.5',
        'Accept-Encoding': 'gzip,deflate,sdch',
        'Accept-Language': 'en-US,en;q=0.8',
        'Cache-Control': 'max-age=0',
        'Connection': 'keep-alive',
        'Host': 'tinysong.com',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1'
    }
}, function (err, res, body) {
    return null;
});
extractSongInfoArrayFromHtml = function (html) {
    var $, index, result, results, songInfo, songInfoArray, _len;
    $ = cheerio.load(html);
    results = $('.result');
    songInfoArray = [];
    for (index = 0, _len = results.length; index < _len; index++) {
        result = results[index];
        result = results.eq(index);
        songInfo = {
            SongID: parseInt(result.find('.play').attr('rel'), 10),
            SongName: result.find('.track .song').text(),
            ArtistID: 0,
            ArtistName: result.find('.track .artist').text(),
            AlbumID: 0,
            AlbumName: ''
        };
        songInfoArray.push(songInfo);
    }
    return songInfoArray;
};
Tinysong.getSongInfoArray = function (trackTitle, callback) {
    if (!(trackTitle != null)) {
        trackTitle = '';
    }

    return request.post({
        url: 'http://tinysong.com/?s=s',
        headers: {
            'Accept': 'application/json, text/javascript, */*',
            'Accept-Charset': 'UTF-8,*;q=0.5',
            'Accept-Language': 'en-US,en;q=0.8',
            'Content-Type': 'application/x-www-form-urlencoded',
            'Host': 'tinysong.com',
            'Origin': 'http://tinysong.com',
            'Referer': 'http://tinysong.com/',
            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: "q[]=" + trackTitle + "&q[]=0"

    }, function (err, res, body) {
        if (err != null) {
            return callback(err, null);
        }
        if (res.statusCode !== 200) {
            return callback(new Error('Status Code is not 200'), null);
        }
        return callback(null, extractSongInfoArrayFromHtml(JSON.parse(body).html));
    });
};
Tinysong.getSongInfo = function (trackTitle, artistName, callback) {
    var isFound, resultSongInfo, startNo;
    if (!(trackTitle != null)) {
        trackTitle = '';
    }
    if (!(artistName != null)) {
        artistName = '';
    }
    startNo = 0;
    resultSongInfo = null;
    isFound = false;
    return async.until(function () {
        return isFound;
    }, function (callback) {
        return Tinysong.getSongInfoArray(trackTitle, artistName, startNo, function (err, songInfoArray) {
            var songInfo, _i, _len;
            if (err != null) {
                return callback(err);
            }
            if (songInfoArray.length === 0) {
                return callback(new Error('no song anymore.'));
            }
            for (_i = 0, _len = songInfoArray.length; _i < _len; _i++) {
                songInfo = songInfoArray[_i];
                if (songInfo.SongName.toLowerCase().indexOf(trackTitle.toLowerCase()) > -1 && songInfo.ArtistName.toLowerCase().indexOf(artistName.toLowerCase()) > -1) {
                    resultSongInfo = songInfo;
                    isFound = true;
                    return callback(null);
                }
            }
            startNo += songInfoArray.length;
            return callback(null);
        });
    }, function (err) {
        if (err != null) {
            return callback(null, null);
        }
        return callback(null, resultSongInfo);
    });
};
module.exports = Tinysong;
